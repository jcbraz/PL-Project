
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY_TABLES_HEADER BOOLEAN CHILD_HEADER COMMA COMMENT DATE DOT EQUAL FLOAT INTEGER LBRACKET LCURLY NEWLINE RBRACKET RCURLY SPACE STRING TABLE_HEADER VARIABLEdocument : toml\n                | toml documenttoml : content\n            | array\n            | table\n            | inline_table\n            | array_tablesarray_tables : ARRAY_TABLES_HEADER content\n                    | ARRAY_TABLES_HEADER array_tableschild : CHILD_HEADER content\n             | CHILD_HEADER childinline_table : LCURLY content RCURLY\n                    | LCURLY RCURLYtable : TABLE_HEADER content\n             | TABLE_HEADER childcontent : assignment\n               | content assignmentassignment : VARIABLE EQUAL valuearray : LBRACKET values RBRACKET\n             | LBRACKET array RBRACKET\n             | LBRACKET RBRACKETvalues : value COMMA values\n              | valuevalue : STRING\n             | INTEGER\n             | FLOAT\n             | BOOLEAN\n             | DATE'
    
_lr_action_items = {'LBRACKET':([0,2,3,4,5,6,7,8,9,15,17,20,21,22,23,24,25,26,29,30,31,33,34,36,37,38,39,],[9,9,-3,-4,-5,-6,-7,-16,9,-17,-21,-24,-25,-26,-27,-28,-14,-15,-13,-8,-9,-19,-20,-10,-11,-12,-18,]),'TABLE_HEADER':([0,2,3,4,5,6,7,8,15,17,20,21,22,23,24,25,26,29,30,31,33,34,36,37,38,39,],[10,10,-3,-4,-5,-6,-7,-16,-17,-21,-24,-25,-26,-27,-28,-14,-15,-13,-8,-9,-19,-20,-10,-11,-12,-18,]),'LCURLY':([0,2,3,4,5,6,7,8,15,17,20,21,22,23,24,25,26,29,30,31,33,34,36,37,38,39,],[11,11,-3,-4,-5,-6,-7,-16,-17,-21,-24,-25,-26,-27,-28,-14,-15,-13,-8,-9,-19,-20,-10,-11,-12,-18,]),'ARRAY_TABLES_HEADER':([0,2,3,4,5,6,7,8,12,15,17,20,21,22,23,24,25,26,29,30,31,33,34,36,37,38,39,],[12,12,-3,-4,-5,-6,-7,-16,12,-17,-21,-24,-25,-26,-27,-28,-14,-15,-13,-8,-9,-19,-20,-10,-11,-12,-18,]),'VARIABLE':([0,2,3,4,5,6,7,8,10,11,12,15,17,20,21,22,23,24,25,26,27,28,29,30,31,33,34,36,37,38,39,],[13,13,13,-4,-5,-6,-7,-16,13,13,13,-17,-21,-24,-25,-26,-27,-28,13,-15,13,13,-13,13,-9,-19,-20,13,-11,-12,-18,]),'$end':([1,2,3,4,5,6,7,8,14,15,17,20,21,22,23,24,25,26,29,30,31,33,34,36,37,38,39,],[0,-1,-3,-4,-5,-6,-7,-16,-2,-17,-21,-24,-25,-26,-27,-28,-14,-15,-13,-8,-9,-19,-20,-10,-11,-12,-18,]),'RCURLY':([8,11,15,20,21,22,23,24,28,39,],[-16,29,-17,-24,-25,-26,-27,-28,38,-18,]),'RBRACKET':([9,16,17,18,19,20,21,22,23,24,33,34,40,],[17,33,-21,34,-23,-24,-25,-26,-27,-28,-19,-20,-22,]),'STRING':([9,32,35,],[20,20,20,]),'INTEGER':([9,32,35,],[21,21,21,]),'FLOAT':([9,32,35,],[22,22,22,]),'BOOLEAN':([9,32,35,],[23,23,23,]),'DATE':([9,32,35,],[24,24,24,]),'CHILD_HEADER':([10,27,],[27,27,]),'EQUAL':([13,],[32,]),'COMMA':([19,20,21,22,23,24,],[35,-24,-25,-26,-27,-28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'document':([0,2,],[1,14,]),'toml':([0,2,],[2,2,]),'content':([0,2,10,11,12,27,],[3,3,25,28,30,36,]),'array':([0,2,9,],[4,4,18,]),'table':([0,2,],[5,5,]),'inline_table':([0,2,],[6,6,]),'array_tables':([0,2,12,],[7,7,31,]),'assignment':([0,2,3,10,11,12,25,27,28,30,36,],[8,8,15,8,8,8,15,8,15,15,15,]),'values':([9,35,],[16,40,]),'value':([9,32,35,],[19,39,19,]),'child':([10,27,],[26,37,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> document","S'",1,None,None,None),
  ('document -> toml','document',1,'p_document','_parser.py',6),
  ('document -> toml document','document',2,'p_document','_parser.py',7),
  ('toml -> content','toml',1,'p_toml','_parser.py',15),
  ('toml -> array','toml',1,'p_toml','_parser.py',16),
  ('toml -> table','toml',1,'p_toml','_parser.py',17),
  ('toml -> inline_table','toml',1,'p_toml','_parser.py',18),
  ('toml -> array_tables','toml',1,'p_toml','_parser.py',19),
  ('array_tables -> ARRAY_TABLES_HEADER content','array_tables',2,'p_array_tables','_parser.py',24),
  ('array_tables -> ARRAY_TABLES_HEADER array_tables','array_tables',2,'p_array_tables','_parser.py',25),
  ('child -> CHILD_HEADER content','child',2,'p_child','_parser.py',30),
  ('child -> CHILD_HEADER child','child',2,'p_child','_parser.py',31),
  ('inline_table -> LCURLY content RCURLY','inline_table',3,'p_inline_table','_parser.py',36),
  ('inline_table -> LCURLY RCURLY','inline_table',2,'p_inline_table','_parser.py',37),
  ('table -> TABLE_HEADER content','table',2,'p_table','_parser.py',45),
  ('table -> TABLE_HEADER child','table',2,'p_table','_parser.py',46),
  ('content -> assignment','content',1,'p_content','_parser.py',51),
  ('content -> content assignment','content',2,'p_content','_parser.py',52),
  ('assignment -> VARIABLE EQUAL value','assignment',3,'p_assignment','_parser.py',60),
  ('array -> LBRACKET values RBRACKET','array',3,'p_array','_parser.py',65),
  ('array -> LBRACKET array RBRACKET','array',3,'p_array','_parser.py',66),
  ('array -> LBRACKET RBRACKET','array',2,'p_array','_parser.py',67),
  ('values -> value COMMA values','values',3,'p_values','_parser.py',75),
  ('values -> value','values',1,'p_values','_parser.py',76),
  ('value -> STRING','value',1,'p_value','_parser.py',84),
  ('value -> INTEGER','value',1,'p_value','_parser.py',85),
  ('value -> FLOAT','value',1,'p_value','_parser.py',86),
  ('value -> BOOLEAN','value',1,'p_value','_parser.py',87),
  ('value -> DATE','value',1,'p_value','_parser.py',88),
]
